<UserControl x:Class="LaJust.PowerMeter.Modules.DataGraph.Views.GameSelectorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns:primitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls"
    xmlns:calendar="clr-namespace:Telerik.Windows.Controls.Calendar;assembly=Telerik.Windows.Controls.Input"
    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:helper="clr-namespace:LaJust.PowerMeter.Common.Helpers;assembly=LaJust.PowerMeter.Common"
    Background="Black" Foreground="White">
    <UserControl.Resources>
        <helper:VisibilityConverter x:Key="VisibilityConverter"/>

        <!-- Custom Template for Up/Down Control -->
        <ControlTemplate x:Key="RadNumericUpDownControlTemplate1" TargetType="{x:Type telerik:RadNumericUpDown}">
            <Grid x:Name="LayoutRoot">
                <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="colDefLeftButtons" Width="Auto"/>
                            <ColumnDefinition x:Name="colDefText" Width="*"/>
                            <ColumnDefinition x:Name="colDefButtons" Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <RepeatButton IsTabStop="False" x:Name="decrease" ContentTemplate="{TemplateBinding IncreaseButtonContentTemplate}" Delay="{TemplateBinding Delay}" Interval="{TemplateBinding RepeatInterval}">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Setter Property="IsTabStop" Value="True"/>
                                    <Setter Property="Cursor" Value="Arrow"/>
                                    <Setter Property="Interval" Value="250"/>
                                    <Setter Property="Delay" Value="100"/>
                                    <Setter Property="ClickMode" Value="Press"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                <Image Margin="0,10,10,10" Source="/LaJust.PowerMeter.Common;component/Resources/Symbol-Restricted.png"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                        <Border x:Name="InnerBorder" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="#FF888688" BorderThickness="1,1,1,1">
                            <telerik:PickerTextBox HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Margin="2,2,2,2" x:Name="textbox" IsReadOnly="True" Text="{TemplateBinding ContentText}">
                                <telerik:StyleManager.Theme>
                                    <telerik:Office_BlackTheme/>
                                </telerik:StyleManager.Theme>
                            </telerik:PickerTextBox>
                        </Border>
                        <RepeatButton Grid.Column="2" IsTabStop="False" x:Name="increase" ContentTemplate="{TemplateBinding DecreaseButtonContentTemplate}" Grid.Row="1" Delay="{TemplateBinding Delay}" Interval="{TemplateBinding RepeatInterval}">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Setter Property="IsTabStop" Value="True"/>
                                    <Setter Property="Cursor" Value="Arrow"/>
                                    <Setter Property="Interval" Value="250"/>
                                    <Setter Property="Delay" Value="100"/>
                                    <Setter Property="ClickMode" Value="Press"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                <Image Margin="10,10,0,10" Source="/LaJust.PowerMeter.Common;component/Resources/Symbol-Add.png"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                        <Border x:Name="ValidationErrorElement" Visibility="Collapsed" BorderBrush="#FFDB000C" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1">
                            <Border.ToolTip>
                                <ToolTip x:Name="validationTooltip" Placement="Right">
                                    <ToolTip.Template>
                                        <ControlTemplate TargetType="{x:Type ToolTip}">
                                            <Grid Margin="5,0,5,0" x:Name="Root" Opacity="0" RenderTransformOrigin="0,0">
                                                <Grid.RenderTransform>
                                                    <TranslateTransform X="-25"/>
                                                </Grid.RenderTransform>
                                                <Border Margin="4,4,-4,-4" Background="#052A2E31" CornerRadius="5,5,5,5"/>
                                                <Border Margin="3,3,-3,-3" Background="#152A2E31" CornerRadius="4,4,4,4"/>
                                                <Border Margin="2,2,-2,-2" Background="#252A2E31" CornerRadius="3,3,3,3"/>
                                                <Border Margin="1,1,-1,-1" Background="#352A2E31" CornerRadius="2,2,2,2"/>
                                                <Border Background="#FFDC000C" CornerRadius="2,2,2,2"/>
                                                <Border CornerRadius="2,2,2,2">
                                                    <TextBlock Margin="8,4,8,4" MaxWidth="250" Foreground="#FFFFFFFF" Text="{Binding Path=(Validation.Errors)[0].ErrorContent}" TextWrapping="Wrap"/>
                                                </Border>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsOpen" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard x:Name="OpenAnimation">
                                                                <DoubleAnimation Duration="00:00:00.2000000" Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0"/>
                                                                <DoubleAnimation Duration="00:00:00.2000000" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <StopStoryboard BeginStoryboardName="OpenAnimation"/>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                                <Trigger Property="IsOpen" Value="True">
                                                    <Setter Property="RenderTransform" TargetName="Root">
                                                        <Setter.Value>
                                                            <TranslateTransform X="0"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Opacity" TargetName="Root" Value="1"/>
                                                </Trigger>
                                                <Trigger Property="IsOpen" Value="False">
                                                    <Setter Property="Opacity" TargetName="Root" Value="0"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToolTip.Template>
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <sys:Boolean>True</sys:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </Border.ToolTip>
                            <Grid HorizontalAlignment="Right" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12" Height="12" Background="#00FFFFFF">
                                <Path Fill="#FFDC000C" Margin="1,3,0,0" Data="M1,0L6,0A2,2,90,0,1,8,2L8,7z"/>
                                <Path Fill="#FFFFFFFF" Margin="1,3,0,0" Data="M0,0L2,0 8,6 8,8"/>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
                <Rectangle Fill="#99FFFFFF" x:Name="DisabledVisual" Visibility="Collapsed"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#FFFFBD69"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard x:Name="ButtonMouseOverStoryboard">
                            <Storyboard Duration="00:00:00">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder" Storyboard.TargetProperty="BorderBrush">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                        <DiscreteObjectKeyFrame.Value>
                                            <SolidColorBrush Color="#FFFFBD69"/>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="ButtonMouseOverStoryboard"/>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="ShowTextBox" Value="False">
                    <Setter Property="Visibility" TargetName="textbox" Value="Collapsed"/>
                    <Setter Property="Width" TargetName="colDefText" Value="Auto"/>
                    <Setter Property="Width" TargetName="colDefButtons" Value="*"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="ListBox">
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="2"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border BorderBrush="DarkSlateGray" BorderThickness="2" CornerRadius="2" Margin="6" Background="LightSteelBlue">
                            <TextBlock Foreground="Black" FontSize="16" Margin="2" Text="{Binding}"/>
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Calendar for selecting the date of the game -->
        <GroupBox Grid.Row="0" Header="Game Event Date" FontSize="24">
            <telerik:RadCalendar FontSize="24" 
                             SelectedDate="{Binding GameDate, Mode=TwoWay}" SelectionMode="Single" 
                             SelectableDateStart="{Binding FirstAvailableDate}"
                             DisplayDateEnd="{x:Static sys:DateTime.Today}">
                <telerik:RadCalendar.DayTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Text}" FontSize="18" FontWeight="Bold" />
                    </DataTemplate>
                </telerik:RadCalendar.DayTemplate>
            </telerik:RadCalendar>
        </GroupBox>
        
        <!-- Selection of Game and Round Number for the selected event date -->
        <GroupBox Grid.Row="1" Header="Game and Round Number" FontSize="24" Margin="0,5,0,0">
            <Grid Visibility="{Binding IsDataAvailable, Converter={StaticResource VisibilityConverter}, ConverterParameter=Visible|Hidden}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width=".4*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width=".4*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" TextAlignment="Center" FontSize="14">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}Games {0} to {1}">
                            <Binding Path="FirstGameNumber" FallbackValue="0" />
                            <Binding Path="LastGameNumber" FallbackValue="0" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Grid.Row="0" Grid.Column="2" TextAlignment="Center" FontSize="14">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} round(s)">
                            <Binding Path="LastRoundNumber" FallbackValue="0" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <telerik:RadNumericUpDown Grid.Row="1" Grid.Column="0" Height="53" Margin="5" IsInteger="True" FontWeight="Bold" Template="{StaticResource RadNumericUpDownControlTemplate1}"
                                      Minimum="1" Maximum="255" Foreground="White" Background="Transparent" BorderThickness="0"
                                      AutoReverse="True" HorizontalContentAlignment="Center" VerticalAlignment="Center" 
                                      Value="{Binding GameNumber, Mode=TwoWay}" />
                <Border Grid.Row="1" Grid.Column="1" BorderThickness="2" Width="2" BorderBrush="LightSlateGray"/>
                <telerik:RadNumericUpDown Grid.Row="1" Grid.Column="2" Height="53" Margin="5" IsInteger="True" FontWeight="Bold" Template="{StaticResource RadNumericUpDownControlTemplate1}"
                                      Minimum="1" Maximum="5" Foreground="White" Background="Transparent" BorderThickness="0"
                                      AutoReverse="True" HorizontalContentAlignment="Center" VerticalAlignment="Center" 
                                      Value="{Binding RoundNumber, Mode=TwoWay}" />
            </Grid>
        </GroupBox>

        <!-- Selection of Competitor for Game and Round Selected -->
        <GroupBox Grid.Row="2" Header="Competitor" FontSize="24" Margin="0,5,0,0" MinHeight="100">
            <Grid Visibility="{Binding IsDataAvailable, Converter={StaticResource VisibilityConverter}, ConverterParameter=Visible|Hidden}">
                <ListBox Margin="2" Background="Black" 
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                         ScrollViewer.VerticalScrollBarVisibility="Auto"
                         ItemsSource="{Binding CompetitorNames}" SelectedItem="{Binding Competitor, Mode=TwoWay}"/>
            </Grid>
        </GroupBox>
    </Grid>

</UserControl>
