<UserControl x:Class="ImpactMeter.MeterView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:my="clr-namespace:ImpactMeter"
    xmlns:infrastructure="clr-namespace:Infrastructure;assembly=Infrastructure">

    <UserControl.Resources>
        <infrastructure:VisibilityConverter x:Key="VisibilityConverter"/>
        <my:MeterColorSelector x:Key="ColorSelector"/>
        <SolidColorBrush x:Key="MeterColor" Color="{Binding Path=Competitor.DeviceType, Converter={StaticResource ColorSelector}}"/>
        <Style x:Key="MeterBackground" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource MeterColor}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsActive}" Value="False">
                    <Setter Property="Background" Value="Gray" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TransparentButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    
    <Grid Margin="5" MaxWidth="500">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="0.75*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Power Impact Meter -->
        <my:AnalogImpactMeter Grid.Row="0"
                              ImpactLevel="{Binding Path=Competitor.LastImpactLevel}" 
                              RequiredImpactLevel="{Binding Path=Competitor.RequiredImpactLevel}" 
                              HighestImpactLevel="{Binding Path=Competitor.HighestImpactLevel}" />

        <!-- Low Battery Indicator -->
        <Image Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" 
               Source="/ImpactMeter;component/Resources/BatteryLow.png" Opacity="0.75" 
               Visibility="{Binding Path=BatteryLow, Converter={StaticResource VisibilityConverter}, ConverterParameter=Visible|Collapsed}" />
        
        <!-- Delete Meter Button -->
        <Button Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" Width="50" Margin="0,20,0,0" Style="{StaticResource ResourceKey=TransparentButton}"
                Command="{Binding CloseMeterCommand}"
                Visibility="{Binding Path=IsActive, Converter={StaticResource VisibilityConverter}, ConverterParameter=Collapsed|Visible}">
            <Image Source="/ImpactMeter;component/Resources/DeleteSymbol.png" Stretch="Uniform" />
        </Button>

        <!-- Strike Panel Display -->
        <Border Grid.Row="1" BorderThickness="2" BorderBrush="Gray" Height="30"
                Visibility="{Binding Path=HasPanels, Converter={StaticResource VisibilityConverter}, ConverterParameter=Visible|Collapsed}">
            <my:StrikePanelDisplay StartPanelNum="1" PanelNum="{Binding Path=HitPanelNum}"/>
        </Border>
        
        <!-- Score Box Display -->
        <Border Grid.Row="2" Style="{DynamicResource MeterBackground}" BorderThickness="2" BorderBrush="Gray">
            <my:ScoreBox Score="{Binding Path=Competitor.Score}" HorizontalAlignment="Center"  />
        </Border>
        
        <!-- Strike Panel Display -->
        <Border Grid.Row="3" BorderThickness="2" BorderBrush="Gray" Height="30"
                Visibility="{Binding Path=HasPanels, Converter={StaticResource VisibilityConverter}, ConverterParameter=Visible|Collapsed}">
            <my:StrikePanelDisplay StartPanelNum="4" PanelNum="{Binding Path=HitPanelNum}"/>
        </Border>

        <!-- Chart Display -->
        <Border Grid.Row="4" BorderThickness="2" BorderBrush="Gray">
            <my:SimpleGraph MinValue="0" MaxValue="100" 
                        LineColor="{DynamicResource MeterColor}" 
                        Threshold="{Binding Path=Competitor.RequiredImpactLevel}" 
                        DataValues="{Binding Path=Competitor.ImpactHistory}"/>
        </Border>

        <Border Grid.Row="5" Style="{DynamicResource MeterBackground}" BorderThickness="2" BorderBrush="Gray">
            <TextBlock Margin="2" Foreground="White" HorizontalAlignment="Center" FontFamily="Impact" FontSize="32" 
                        Text="{Binding Path=Competitor.DisplayName}" />
        </Border>

        <Border Grid.Row="6" BorderThickness="2" BorderBrush="Gray">
            <Grid Background="WhiteSmoke">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Style="{StaticResource TransparentButton}" Command="{Binding MoveMeterLeftCommand}" HorizontalAlignment="Left">
                    <Image Height="36" Source="/ImpactMeter;component/Resources/LeftArrow.png" />
                </Button>
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Style="{StaticResource TransparentButton}" Command="{Binding LevelDecreaseCommand}">
                        <Image Height="36" Margin="20,0,20,0" Source="/ImpactMeter;component/Resources/Minus.png" />
                    </Button>
                    <Button Style="{StaticResource TransparentButton}" Command="{Binding ShowPopupRosterCommand}">
                        <Image Height="36" Margin="20,0,20,0" Source="/ImpactMeter;component/Resources/EditPen.png" />
                    </Button>
                    <Button Style="{StaticResource TransparentButton}" Command="{Binding ShowPopupGraphCommand}">
                        <Image Height="36" Margin="20,0,20,0" Source="/ImpactMeter;component/Resources/Zoom.png" />
                    </Button>
                    <Button Style="{StaticResource TransparentButton}" Command="{Binding LevelIncreaseCommand}">
                        <Image Height="36" Margin="20,0,20,0" Source="/ImpactMeter;component/Resources/Plus.png" />
                    </Button>
                </StackPanel>
                <Button Grid.Column="2" Style="{StaticResource TransparentButton}" Command="{Binding MoveMeterRightCommand}" HorizontalAlignment="Right">
                    <Image Height="36" Source="/ImpactMeter;component/Resources/RightArrow.png" />
                </Button>
            </Grid>
        </Border>
    </Grid>
</UserControl>
