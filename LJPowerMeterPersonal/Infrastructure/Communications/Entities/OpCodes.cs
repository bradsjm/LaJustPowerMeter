/*
 * © Copyright 2009 Jonathan Bradshaw, LaJust Sports America, Inc. All Rights Reserved. 
 */
namespace LaJust.EIDSS.Communications.Entities
{
    #region Public Enumerations

    public enum OpCodeCmds : byte
    {
        // EIDSS 2.0 and 3.0 op codes
        RegisterChung = 0x21,
        RegisterHong = 0x41,
        GenerateTone = 0x91,
        Acknowledgement = 0xAC,

        // EIDSS 3.0 receiver uses these op codes, not available in EIDSS 2.0
        RegisterTarget = 0x33,
        PreRegisterChung = 0x51,
        PreRegisterHong = 0x52
    }

    /// <summary>
    /// Defines the operation codes for the receiver
    /// </summary>
    public enum OpCodes : byte
    {
        // EIDSS 2.0 and 3.0 op codes
        ChungRegistered = 0x63,
        HongRegistered = 0x65,
        PanelButtonPressed = 0x90,

        // EIDSS 2.0 receiver uses these op codes, not used in EIDSS 3.0
        HongNotResponding = 0xA1,
        ChungNotResponding = 0xA2,
        HongDataV1 = 0xA5,
        ChungDataV1 = 0xA6,

        // EIDSS 3.0 receiver uses these op codes, not available in EIDSS 2.0
        TargetRegistered = 0x53,
        TargetDataV2 = 0xA8,
        HongDataV2 = 0xB5,
        ChungDataV2 = 0xB6,
        ChungPreRegistered = 0x61,
        HongPreRegistered = 0x68
    }

    /// <summary>
    /// Defines the sensor contact mode byte type
    /// </summary>
    public enum TouchSensorStatusEnum : byte
    {
        /// <summary>
        /// 
        /// </summary>
        Required = 0x01,
        /// <summary>
        /// 
        /// </summary>
        NotRequired = 0x02
    }

    /// <summary>
    /// Defines the tones generated by the receiver
    /// </summary>
    public enum ToneTypeEnum : byte
    {
        StartRound = 0x01,
        EndRound = 0x02,
        Warning = 0x03
    }

    /// <summary>
    /// Defines the sensor contact mode byte type.
    /// 0x80 indicates top contact sock sensor, 0x8 indicates bottom sock contact sensor
    /// AND value with 0x77 to remove sock sensor bit
    /// </summary>
    public enum WetBagPanelEnum : byte
    {
        Unknown = 0,
        // Without sock sensor
        TopLeft = 0x60,                     // 0110 0000
        TopMiddle = 0x50,                   // 0101 0000
        TopRight = 0x40,                    // 0100 0000
        BottomLeft = 0x03,                  // 0000 0011
        BottomMiddle = 0x02,                // 0000 0010
        BottomRight = 0x01,                 // 0000 0001
        // With sock sensor
        //TouchTopLeft = 0xE0,              // 1110 0000
        //TouchTopMiddle = 0xD0,            // 1101 0000
        //TouchTopRight = 0xC0,             // 1100 0000
        //TouchBottomLeft = 0xB,            // 0000 1011
        //TouchBottomMiddle = 0xA,          // 0000 1010
        //TouchBottomRight = 0x9            // 0000 1001
    }

    /// <summary>
    /// Status Code Definitions
    /// </summary>
    public enum DeviceStatusEnum : byte
    {
        /// <summary>
        /// Unknown status generated by hogu when operating normally
        /// </summary>
        HoguOk = 0x08,
        /// <summary>
        /// Status generated when low battery detected
        /// </summary>
        LowBattery = 0x09,
        /// <summary>
        /// Status generated when device communications are lost
        /// </summary>
        NotResponding = 0x0C,
        /// <summary>
        /// Unknown status generated by targets when operating normally
        /// </summary>
        TargetOk = 0x88
    }
    #endregion

    #region Internal Enumerations

    /// <summary>
    /// Byte map for registration response data fields
    /// Example: 00-63-00-51-0A-02-13-16-00-00
    /// </summary>
    internal enum RegistrationDataFields
    {
        GameNumber = 0,
        OpCode = 1,
        CourtNumber = 2,
        RegSequence = 3,
        MinimumPressure = 4,
        TouchSensorMode = 5,
        Id1 = 6,
        Id2 = 7,
        Id3 = 8
    }

    /// <summary>
    /// Byte map for strike data fields from version 1 receivers
    /// Example: 00-A6-46-2B-00-00-08-06
    /// </summary>
    internal enum HoguDataFieldsV1
    {
        GameNumber = 0,
        OpCode = 1,
        RegSequence = 2,
        VestHitValue = 3,
        HeadHitValue = 4,
        TouchStatus = 5,
        HoguStatus = 6,
        SequenceNumber = 7
    }

    /// <summary>
    /// Byte map for strike data fields from version 2 receivers
    /// Example: 00-B6-46-2B-00-00-08-13-16-00-06
    /// </summary>
    internal enum HoguDataFieldsV2
    {
        GameNumber = 0,
        OpCode = 1,
        RegSequence = 2,
        VestHitValue = 3,
        HeadHitValue = 4,
        TouchStatus = 5,
        HoguStatus = 6,
        ID1 = 7,
        ID2 = 8,
        ID3 = 9,
        SequenceNumber = 10
    }

    /// <summary>
    /// Byte map for the target data fields from version 2 receivers (not supported on V1)
    /// Example: 04-A8-A0-00-00-00-0C-CF-29-00-00-01-02
    /// </summary>
    internal enum TargetDataFieldsV2
    {
        GameNumber = 0,
        OpCode = 1,
        RegSequence = 2,
        VestHitValue = 3,
        HeadHitValue = 4,
        PanelValue = 5,
        HoguStatus = 6,
        ID1 = 7,
        ID2 = 8,
        ID3 = 9,
        TargetNumber = 10,
        TargetTotal = 11,
        SequenceNumber = 12
    }

    #endregion
}
